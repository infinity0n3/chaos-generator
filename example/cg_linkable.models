{
	"models":[{
		"name": "Link",
		"properties": [{
			"brief": "Link lable",
			"name": "label",
			"type": "string"
		}, {
			"brief": "Link source object",
			"name": "link_source",
			"type": "Linkable*",
			"tags": ["foreign"]
		}, {
			"brief": "Link target object",
			"name": "link_target",
			"type": "Linkable*",
			"tags": ["foreign"]
		}],
		"methods": []
	}, {
		"name": "Linkable",
		"properties": [{
			"brief": "Link object flags",
			"name": "link_flags",
			"type": "unsigned"
		}, {
			"brief": "Link flags required to link to this object",
			"name": "link_accepts",
			"type": "unsigned"
		}, {
			"name": "type",
			"type": "string"
		}],
		"methods": [{
			"brief": "Check if linkable object accepts provided flags",
			"name": "canAccept",
			"return": "bool",
			"arguments": [{
				"brief": "Check if this linkable object can accpept the other object",
				"name": "link",
				"type": "Linkable*",
				"tags": ["const"]
			}],
			"tags": ["virtual"]
		}]
		
	}],
	"enums": [{
		"name": "IOType",
		"package": "linkable",
		"elements": [{
			"name": "IN"
		}, {
			"name": "OUT"
		}, {
			"name": "INOUT",
			"tags": ["alias_or:IN,OUT"]
		}],
		"tags": ["flags"]
	}]
}
